package components;

import java.util.ArrayList;

/**
 * @author Daniel Elmaliach
 * @ID 206068629
 * The Class Package.
 */
public abstract class Package {
	
	/** The id. */
	private static int ID = 1000;
	
	/** The package ID. */
	private int packageID;
	
	/** The priority. */
	private Priority priority;
	
	/** The status. */
	private Status status;
	
	/** The sender address. */
	private Address senderAddress;
	
	/** The destination address. */
	private Address destinationAddress;
	
	/** The tracking. */
	private ArrayList<Tracking> tracking;
	
	/**
	 * Instantiates a new package.
	 *
	 * @param priority the priority
	 * @param senderAddress the sender address
	 * @param destinationAdress the destination adress
	 */
	public Package(Priority priority, Address senderAddress, Address destinationAdress) {
		this.packageID = ID++;
		this.priority = priority;
		this.senderAddress = senderAddress;
		this.destinationAddress = destinationAdress;
		this.status = components.Status.CREATION;
		tracking = new ArrayList<Tracking>();
		addTracking(null, components.Status.CREATION);
	}
	
	/**
	 * Adds the tracking.
	 *
	 * @param node the node
	 * @param status the status
	 */
	public void addTracking (Node node, Status status) {
		Tracking track = new Tracking(MainOffice.getClock(), node, status);
		tracking.add(track);
	}
	
	/**
	 * Prints the tracking.
	 */
	public void printTracking () {
		System.out.println("TRACKING " + toString());
		for(int i=0;i<tracking.size();i++)
			System.out.println(tracking.get(i));
	}
	
	/**
	 * Sets the package ID.
	 *
	 * @param packageID the new package ID
	 */
	public void setPackageID(int packageID) { this.packageID = packageID; }
	
	/**
	 * Sets the priority.
	 *
	 * @param priority the new priority
	 */
	public void setPriority(Priority priority) { this.priority = priority; }
	
	/**
	 * Sets the status.
	 *
	 * @param status the new status
	 */
	public void setStatus(Status status) { this.status = status; }
	
	/**
	 * Sets the sender address.
	 *
	 * @param senderAddress the new sender address
	 */
	public void setSenderAddress(Address senderAddress) { this.senderAddress = senderAddress; }
	
	/**
	 * Sets the destination address.
	 *
	 * @param destinationAddress the new destination address
	 */
	public void setDestinationAddress(Address destinationAddress) { this.destinationAddress = destinationAddress; }
	
	/**
	 * Sets the tracking.
	 *
	 * @param tracking the new tracking
	 */
	public void setTracking(ArrayList<Tracking> tracking) { this.tracking = tracking; }
	
	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	public int getID() { return ID; }
	
	/**
	 * Gets the package ID.
	 *
	 * @return the package ID
	 */
	public int getPackageID() { return packageID; }
	
	/**
	 * Gets the priority.
	 *
	 * @return the priority
	 */
	public Priority getPriority() { return priority; }
	
	/**
	 * Gets the status.
	 *
	 * @return the status
	 */
	public Status getStatus() { return status; }
	
	/**
	 * Gets the sender address.
	 *
	 * @return the sender address
	 */
	public Address getSenderAddress() { return senderAddress; }
	
	/**
	 * Gets the destination address.
	 *
	 * @return the destination address
	 */
	public Address getDestinationAddress() { return destinationAddress; }
	
	/**
	 * Gets the tracking.
	 *
	 * @return the tracking
	 */
	public ArrayList<Tracking> getTracking() { return tracking; }
	
	/**
	 * To string.
	 *
	 * @return the string
	 */
	public String toString() { return "[packageID=" + packageID + ", priority="+ priority +", status=" + status + ", startTime="+ tracking.get(0).getTime() + ", senderAddress=" + senderAddress + ", destinationAddress=" + destinationAddress + ", "+ Additional() +"]"; }
	
	/**
	 * Additional.
	 *
	 * @return the string
	 */
	public abstract String Additional();
	
	/**
	 * Equals.
	 *
	 * @param object the object
	 * @return true, if successful
	 */
	public boolean equals(Object object) {
		if(object == null || this.getClass() != object.getClass()) 
			return false; 
		Package other = (Package)object;
		return packageID == other.packageID && priority == other.priority && status == other.status && senderAddress.equals(other.senderAddress) && destinationAddress.equals(other.destinationAddress) && tracking.equals(other.tracking);
	}
}
